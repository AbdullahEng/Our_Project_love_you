@model AdmissionSystem.View_Model.Identity_view_model.LoginViewModle

@{
    ViewData["Title"] = "Login";
}
@using Microsoft.Extensions.Options
    @using AdmissionSystem.Model.GoogleCaptcha
    @inject IOptions<GoogleCaptchaConfig> GoogleRecaptchaconfig

<script type="text/javascript" src="quform/js/scripts.js"></script>
<h1>Login</h1>

<h4>LoginViewModle</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @if (ViewBag.norecaptcha != null) {

                <div class="alert alert-danger">
                @ViewBag.norecaptcha


                </div>
                    }
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="password" class="control-label"></label>
                <input asp-for="password" class="form-control" />
                <span asp-validation-for="password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            @*<div class="form-group">
            <div class="g-recaptcha" data-sitkey="6LeSM3chAAAAACpQ1uEJQYjxwYsOYqqCV7lw5lYX">

            </div>

        </div>*@
            @* <input type="hidden" id="LoginViweModeltoken" asp-for="token" />*@
            <div class="form-group">

                <div class="g-recaptcha" data-sitekey=" @GoogleRecaptchaconfig.Value.SiteKey"></div>


            </div>
            <div class="form-group">

                @if (ViewBag.captchMessage != null)
                {
                    <div class=" text-danger">
                        @ViewBag.captchMessage
                    </div>

                        }
                </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script>
    window.QuformRecaptchaLoaded = function () {
        if (window.grecaptcha && window.jQuery) {
            jQuery('.g-recaptcha').each(function () {
                var $recaptcha = jQuery(this);

                if ($recaptcha.is(':empty')) {
                    $recaptcha.data('recaptcha-id', grecaptcha.render($recaptcha[0]));
                }
            });
        }
    };
</script>
<script src="https://www.google.com/recaptcha/api.js?onload=QuformRecaptchaLoaded&amp;render=explicit" async defer></script>



@*<div>
        <a asp-action="Index">Back to List</a>
    </div>*@
@* <script src="https://www.google.com/recaptcha/api.js?@GoogleRecaptchaconfig.Value.SiteKey"></script>*@

@*<script type="text/javascript">
        var onloadCallback = function () {
            grecaptcha.render('html_element', {
                'sitekey': '@GoogleRecaptchaconfig.Value.SiteKey'
            });
        };
    </script>*@


@*<script>

        $(function () {
        grecaptcha.ready(function () {
            grecaptcha.execute('@GoogleRecaptchaconfig.Value.SiteKey', { action: 'submit' }).then(function (token) {
                // Add your logic to submit to your backend server here.
                console.log(token);
            });
        });
        });
    </script>*@







@*<script>
        //function onClick(e) {
        //    e.preventDefault();
        grecaptcha.ready(function () {
            grecaptcha.execute('@GoogleRecaptchaconfig.Value.SiteKey', { action: 'submit' }).then(function (token) {
                // Add your logic to submit to your backend server here.
                console.log(token);
            });
        });
           /* }*/
    </script>*@

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@




@*<script>


       grecaptcha.ready(function () {
           grecaptcha.execute('@GoogleRecaptchaconfig.Value.SiteKey', { action: 'submit' }).then(function (token) {
               // Add your logic to submit to your backend server here.
               console.log(token);
               // document.getElementById("LoginViweModeltoken").value = token;


           });
       });

    //  setInterval(gettoken, 115000);
      //$(function{
      //    gettoken();
      //});
      </script>*@

@*  *@
